from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Create a CNN model (example architecture)
model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(150, 150, 3)),
    MaxPooling2D((2, 2)),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D((2, 2)),
    Flatten(),
    Dense(128, activation='relu'),
    Dense(5, activation='softmax')  # 5 output classes (emotions)
])

# Compile the model
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Load and preprocess the dataset using ImageDataGenerator
datagen = ImageDataGenerator(rescale=1./255)  # Normalize pixel values
train_generator = datagen.flow_from_directory(
    'path_to_train_dataset/',
    target_size=(150, 150),
    batch_size=32,
    class_mode='sparse'
)

# Train the model
model.fit(train_generator, epochs=10)

# Save the trained model as an .h5 file
model.save('emotion_recognition_model.h5')
